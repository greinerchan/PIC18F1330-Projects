

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 28 20:04:41 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F1330
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.41
    15                           ; Generated 25/01/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F1330 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _T0CONbits	set	4053
    49  0000                     _PIE1bits	set	3997
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _TRISAbits	set	3986
    52  0000                     _TXSTAbits	set	4012
    53  0000                     _BAUDCONbits	set	4024
    54  0000                     _SPBRG	set	4015
    55  0000                     _TRISBbits	set	3987
    56  0000                     _OSCCON	set	4051
    57  0000                     _PORTBbits	set	3969
    58  0000                     _RCREG	set	4014
    59  0000                     _INTCONbits	set	4082
    60  0000                     _RCIF	set	31989
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  0000E6                     __pcinit:
    66                           	opt stack 0
    67  0000E6                     start_initialization:
    68                           	opt stack 0
    69  0000E6                     __initialization:
    70                           	opt stack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (2 bytes)
    73  0000E6  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
    74  0000E8  6A0F               	clrf	__pbssCOMRAM& (0+255),c
    75  0000EA                     end_of_initialization:
    76                           	opt stack 0
    77  0000EA                     __end_of__initialization:
    78                           	opt stack 0
    79  0000EA  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80  0000EC  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81  0000EE  0100               	movlb	0
    82  0000F0  EF55  F000         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	bssCOMRAM
    85  00000F                     __pbssCOMRAM:
    86                           	opt stack 0
    87  00000F                     _Dummy_Var:
    88                           	opt stack 0
    89  00000F                     	ds	1
    90  000010                     _Data_Received:
    91                           	opt stack 0
    92  000010                     	ds	1
    93                           
    94                           	psect	cstackCOMRAM
    95  000001                     __pcstackCOMRAM:
    96                           	opt stack 0
    97  000001                     ??_Get_Serial:
    98  000001                     
    99                           ; 2 bytes @ 0x0
   100  000001                     	ds	14
   101  00000F                     
   102                           ; 1 bytes @ 0xE
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 88 in file "serial.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  2   40[None  ] int 
   115 ;; Registers used:
   116 ;;		wreg, status,2
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0
   122 ;;      Params:         0       0
   123 ;;      Locals:         0       0
   124 ;;      Temps:          0       0
   125 ;;      Totals:         0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called:    1
   128 ;; This function calls:
   129 ;;		Nothing
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  0000AA                     __ptext0:
   137                           	opt stack 0
   138  0000AA                     _main:
   139                           	opt stack 30
   140                           
   141                           ;serial.c: 92: OSCCON = 0x6C;
   142                           
   143                           ;incstack = 0
   144  0000AA  0E6C               	movlw	108
   145  0000AC  6ED3               	movwf	4051,c	;volatile
   146                           
   147                           ;serial.c: 97: TRISBbits.TRISB4 = 0;
   148  0000AE  9893               	bcf	3987,4,c	;volatile
   149                           
   150                           ;serial.c: 98: PORTBbits.RB4 = 0;
   151  0000B0  9881               	bcf	3969,4,c	;volatile
   152                           
   153                           ;serial.c: 105: SPBRG = 25;
   154  0000B2  0E19               	movlw	25
   155  0000B4  6EAF               	movwf	4015,c	;volatile
   156                           
   157                           ;serial.c: 106: BAUDCONbits.BRG16 = 0;
   158  0000B6  96B8               	bcf	4024,3,c	;volatile
   159                           
   160                           ;serial.c: 107: TXSTAbits.BRGH = 1;
   161  0000B8  84AC               	bsf	4012,2,c	;volatile
   162                           
   163                           ;serial.c: 111: TXSTAbits.SYNC = 0;
   164  0000BA  98AC               	bcf	4012,4,c	;volatile
   165                           
   166                           ;serial.c: 112: TXSTAbits.TX9 = 0;
   167  0000BC  9CAC               	bcf	4012,6,c	;volatile
   168                           
   169                           ;serial.c: 113: BAUDCONbits.TXCKP = 0;
   170  0000BE  98B8               	bcf	4024,4,c	;volatile
   171                           
   172                           ;serial.c: 116: TRISAbits.RA3 = 1;
   173  0000C0  8692               	bsf	3986,3,c	;volatile
   174                           
   175                           ;serial.c: 117: TRISAbits.RA2 = 1;
   176  0000C2  8492               	bsf	3986,2,c	;volatile
   177                           
   178                           ;serial.c: 118: TRISBbits.RB5 = 1;
   179  0000C4  8A93               	bsf	3987,5,c	;volatile
   180                           
   181                           ;serial.c: 121: TXSTAbits.TXEN = 1;
   182  0000C6  8AAC               	bsf	4012,5,c	;volatile
   183                           
   184                           ;serial.c: 122: RCSTAbits.SPEN = 1;
   185  0000C8  8EAB               	bsf	4011,7,c	;volatile
   186                           
   187                           ;serial.c: 123: RCSTAbits.CREN = 1;
   188  0000CA  88AB               	bsf	4011,4,c	;volatile
   189                           
   190                           ;serial.c: 127: INTCONbits.GIE = 1;
   191  0000CC  8EF2               	bsf	intcon,7,c	;volatile
   192                           
   193                           ;serial.c: 128: INTCONbits.PEIE = 1;
   194  0000CE  8CF2               	bsf	intcon,6,c	;volatile
   195                           
   196                           ;serial.c: 129: PIE1bits.RCIE = 1;
   197  0000D0  8A9D               	bsf	3997,5,c	;volatile
   198                           
   199                           ;serial.c: 134: T0CONbits.T08BIT = 0;
   200  0000D2  9CD5               	bcf	4053,6,c	;volatile
   201                           
   202                           ;serial.c: 139: T0CONbits.T0CS = 0;
   203  0000D4  9AD5               	bcf	4053,5,c	;volatile
   204                           
   205                           ;serial.c: 143: T0CONbits.PSA = 0;
   206  0000D6  96D5               	bcf	4053,3,c	;volatile
   207                           
   208                           ;serial.c: 148: T0CONbits.T0PS2 = 0;
   209  0000D8  94D5               	bcf	4053,2,c	;volatile
   210                           
   211                           ;serial.c: 149: T0CONbits.T0PS1 = 1;
   212  0000DA  82D5               	bsf	4053,1,c	;volatile
   213                           
   214                           ;serial.c: 150: T0CONbits.T0PS0 = 0;
   215  0000DC  90D5               	bcf	4053,0,c	;volatile
   216                           
   217                           ;serial.c: 152: RCREG = 0;
   218  0000DE  0E00               	movlw	0
   219  0000E0  6EAE               	movwf	4014,c	;volatile
   220  0000E2  EF53  F000         	goto	start
   221  0000E6                     __end_of_main:
   222                           	opt stack 0
   223                           intcon	equ	0xFF2
   224                           
   225 ;; *************** function _Get_Serial *****************
   226 ;; Defined at:
   227 ;;		line 65 in file "serial.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0
   241 ;;      Params:         0       0
   242 ;;      Locals:         0       0
   243 ;;      Temps:         14       0
   244 ;;      Totals:        14       0
   245 ;;Total ram usage:       14 bytes
   246 ;; Hardware stack levels used:    1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		Interrupt level 2
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	intcode
   255  000008                     __pintcode:
   256                           	opt stack 0
   257  000008                     _Get_Serial:
   258                           	opt stack 30
   259                           
   260                           ;incstack = 0
   261  000008  8211               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   262  00000A  CFFA F001          	movff	pclath,??_Get_Serial
   263  00000E  CFFB F002          	movff	pclatu,??_Get_Serial+1
   264  000012  CFE9 F003          	movff	fsr0l,??_Get_Serial+2
   265  000016  CFEA F004          	movff	fsr0h,??_Get_Serial+3
   266  00001A  CFE1 F005          	movff	fsr1l,??_Get_Serial+4
   267  00001E  CFE2 F006          	movff	fsr1h,??_Get_Serial+5
   268  000022  CFD9 F007          	movff	fsr2l,??_Get_Serial+6
   269  000026  CFDA F008          	movff	fsr2h,??_Get_Serial+7
   270  00002A  CFF3 F009          	movff	prodl,??_Get_Serial+8
   271  00002E  CFF4 F00A          	movff	prodh,??_Get_Serial+9
   272  000032  CFF6 F00B          	movff	tblptrl,??_Get_Serial+10
   273  000036  CFF7 F00C          	movff	tblptrh,??_Get_Serial+11
   274  00003A  CFF8 F00D          	movff	tblptru,??_Get_Serial+12
   275  00003E  CFF5 F00E          	movff	tablat,??_Get_Serial+13
   276                           
   277                           ;serial.c: 67: INTCONbits.GIE = 1;
   278  000042  8EF2               	bsf	intcon,7,c	;volatile
   279  000044                     i2l33:
   280  000044  AA9E               	btfss	3998,5,c	;volatile
   281  000046  D7FE               	goto	i2l33
   282                           
   283                           ;serial.c: 69: Data_Received= RCREG;
   284  000048  CFAE F010          	movff	4014,_Data_Received	;volatile
   285                           
   286                           ;serial.c: 71: if(Data_Received == 0x0F)
   287  00004C  0E0F               	movlw	15
   288  00004E  1810               	xorwf	_Data_Received,w,c
   289  000050  A4D8               	btfss	status,2,c
   290  000052  D002               	goto	i2l645
   291                           
   292                           ;serial.c: 72: {
   293                           ;serial.c: 73: PORTBbits.RB4 = 1;
   294  000054  8881               	bsf	3969,4,c	;volatile
   295                           
   296                           ;serial.c: 74: RCIF=0;
   297  000056  9A9E               	bcf	3998,5,c	;volatile
   298  000058                     i2l645:
   299                           
   300                           ;serial.c: 75: }
   301                           ;serial.c: 78: if(Data_Received == 0x87)
   302  000058  0E87               	movlw	135
   303  00005A  1810               	xorwf	_Data_Received,w,c
   304  00005C  A4D8               	btfss	status,2,c
   305  00005E  D002               	goto	i2l649
   306                           
   307                           ;serial.c: 79: {
   308                           ;serial.c: 82: PORTBbits.RB4 = 0;
   309  000060  9881               	bcf	3969,4,c	;volatile
   310                           
   311                           ;serial.c: 83: RCIF=0;
   312  000062  9A9E               	bcf	3998,5,c	;volatile
   313  000064                     i2l649:
   314                           
   315                           ;serial.c: 84: }
   316                           ;serial.c: 85: RCREG = 0;
   317  000064  0E00               	movlw	0
   318  000066  6EAE               	movwf	4014,c	;volatile
   319                           
   320                           ;serial.c: 86: INTCONbits.GIE = 0;
   321  000068  9EF2               	bcf	intcon,7,c	;volatile
   322  00006A  C00E  FFF5         	movff	??_Get_Serial+13,tablat
   323  00006E  C00D  FFF8         	movff	??_Get_Serial+12,tblptru
   324  000072  C00C  FFF7         	movff	??_Get_Serial+11,tblptrh
   325  000076  C00B  FFF6         	movff	??_Get_Serial+10,tblptrl
   326  00007A  C00A  FFF4         	movff	??_Get_Serial+9,prodh
   327  00007E  C009  FFF3         	movff	??_Get_Serial+8,prodl
   328  000082  C008  FFDA         	movff	??_Get_Serial+7,fsr2h
   329  000086  C007  FFD9         	movff	??_Get_Serial+6,fsr2l
   330  00008A  C006  FFE2         	movff	??_Get_Serial+5,fsr1h
   331  00008E  C005  FFE1         	movff	??_Get_Serial+4,fsr1l
   332  000092  C004  FFEA         	movff	??_Get_Serial+3,fsr0h
   333  000096  C003  FFE9         	movff	??_Get_Serial+2,fsr0l
   334  00009A  C002  FFFB         	movff	??_Get_Serial+1,pclatu
   335  00009E  C001  FFFA         	movff	??_Get_Serial,pclath
   336  0000A2  9211               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   337  0000A4  0011               	retfie		f
   338  0000A6                     __end_of_Get_Serial:
   339                           	opt stack 0
   340  0000                     pclatu	equ	0xFFB
   341                           pclath	equ	0xFFA
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           prodh	equ	0xFF4
   347                           prodl	equ	0xFF3
   348                           intcon	equ	0xFF2
   349                           fsr0h	equ	0xFEA
   350                           fsr0l	equ	0xFE9
   351                           fsr1h	equ	0xFE2
   352                           fsr1l	equ	0xFE1
   353                           fsr2h	equ	0xFDA
   354                           fsr2l	equ	0xFD9
   355                           status	equ	0xFD8
   356                           pclatu	equ	0xFFB
   357                           pclath	equ	0xFFA
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           prodh	equ	0xFF4
   363                           prodl	equ	0xFF3
   364                           intcon	equ	0xFF2
   365                           fsr0h	equ	0xFEA
   366                           fsr0l	equ	0xFE9
   367                           fsr1h	equ	0xFE2
   368                           fsr1l	equ	0xFE1
   369                           fsr2h	equ	0xFDA
   370                           fsr2l	equ	0xFD9
   371                           status	equ	0xFD8
   372                           
   373                           	psect	rparam
   374  0000                     pclatu	equ	0xFFB
   375                           pclath	equ	0xFFA
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           prodh	equ	0xFF4
   381                           prodl	equ	0xFF3
   382                           intcon	equ	0xFF2
   383                           fsr0h	equ	0xFEA
   384                           fsr0l	equ	0xFE9
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           fsr2h	equ	0xFDA
   388                           fsr2l	equ	0xFD9
   389                           status	equ	0xFD8
   390                           
   391                           	psect	temp
   392  000011                     btemp:
   393                           	opt stack 0
   394  000011                     	ds	1
   395  0000                     int$flags	set	btemp
   396                           pclatu	equ	0xFFB
   397                           pclath	equ	0xFFA
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           prodh	equ	0xFF4
   403                           prodl	equ	0xFF3
   404                           intcon	equ	0xFF2
   405                           fsr0h	equ	0xFEA
   406                           fsr0l	equ	0xFE9
   407                           fsr1h	equ	0xFE2
   408                           fsr1l	equ	0xFE1
   409                           fsr2h	equ	0xFDA
   410                           fsr2l	equ	0xFD9
   411                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     14      16
    BANK0           128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Get_Serial in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Get_Serial in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _Get_Serial                                          14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _Get_Serial (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              FF      0       0       6        0.0%
EEDATA              80      0       0       0        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      E      10       1       12.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10       5        0.0%
DATA                 0      0      10       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 28 20:04:41 2017

            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_WDT$OFF 000000  
                   _RCIF 007CF5                     i2l33 0044            __CFG_BOR$BOHW 000000  
                   _main 00AA                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0011                     prodh 000FF4  
                   prodl 000FF3                     start 00A6            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000               _Get_Serial 0008  
                  ?_main 0001                    i2l645 0058                    i2l649 0064  
                  _RCREG 000FAE                    _SPBRG 000FAF            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
        __initialization 00E6           __CFG_HPOL$HIGH 000000             __end_of_main 00E6  
         __CFG_LPOL$HIGH 000000                   ??_main 000F            __activetblptr 000000  
                 _OSCCON 000FD3           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
            ?_Get_Serial 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 00EA  
        __CFG_FLTAMX$RA5 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
        __CFG_OSC$INTIO1 000000      __size_of_Get_Serial 009E            _Data_Received 0010  
       __CFG_BBSIZ$BB256 000000          __CFG_PWMPIN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 00E6                  __ramtop 0100  
                __ptext0 00AA                _T0CONbits 000FD5     end_of_initialization 00EA  
              _RCSTAbits 000FAB             ??_Get_Serial 0001                _PORTBbits 000F81  
              _TRISAbits 000F92                _TRISBbits 000F93                _TXSTAbits 000FAC  
     __end_of_Get_Serial 00A6         __CFG_T1OSCMX$LOW 000000              _BAUDCONbits 000FB8  
    start_initialization 00E6                _Dummy_Var 000F              __pbssCOMRAM 000F  
              __pintcode 0008                 _PIE1bits 000F9D         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 003C  
               int$flags 0011               _INTCONbits 000FF2                 intlevel2 0000  
