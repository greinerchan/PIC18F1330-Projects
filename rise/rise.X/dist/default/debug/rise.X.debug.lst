

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 09 18:11:03 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F1330
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F1330 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	nvCOMRAM
    49  000006                     __pnvCOMRAM:
    50                           	opt stack 0
    51  000006                     _sgvar:
    52                           	opt stack 0
    53  000006                     	ds	2
    54  0000                     _ADRESH	set	4036
    55  0000                     _ADCON0bits	set	4034
    56  0000                     _ADCON2bits	set	4032
    57  0000                     _TRISAbits	set	3986
    58  0000                     _ADCON1bits	set	4033
    59  0000                     _PORTBbits	set	3969
    60  0000                     _TRISBbits	set	3987
    61  0000                     _OSCCON	set	4051
    62  0000                     _T0CONbits	set	4053
    63  0000                     _TMR0L	set	4054
    64  0000                     _TMR0H	set	4055
    65  0000                     _INTCONbits	set	4082
    66  0000                     _TMR0IF	set	32658
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  001F58                     __pcinit:
    72                           	opt stack 0
    73  001F58                     start_initialization:
    74                           	opt stack 0
    75  001F58                     __initialization:
    76                           	opt stack 0
    77  001F58                     end_of_initialization:
    78                           	opt stack 0
    79  001F58                     __end_of__initialization:
    80                           	opt stack 0
    81  001F58  0100               	movlb	0
    82  001F5A  EFD0  F00F         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackCOMRAM
    85  000001                     __pcstackCOMRAM:
    86                           	opt stack 0
    87  000001                     Delay_Sec@i2:
    88                           	opt stack 0
    89                           
    90                           ; 2 bytes @ 0x0
    91  000001                     	ds	2
    92  000003                     ??_Delay_Sec:
    93                           
    94                           ; 1 bytes @ 0x2
    95  000003                     	ds	1
    96  000004                     Delay_Sec@iseconds:
    97                           	opt stack 0
    98                           
    99                           ; 2 bytes @ 0x3
   100  000004                     	ds	2
   101  000006                     
   102                           ; 1 bytes @ 0x5
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 96 in file "SGprojADCIntro2.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  2   39[None  ] int 
   115 ;; Registers used:
   116 ;;		wreg, status,2, status,0, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0
   122 ;;      Params:         0       0
   123 ;;      Locals:         0       0
   124 ;;      Temps:          0       0
   125 ;;      Totals:         0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called:    1
   128 ;; This function calls:
   129 ;;		_Delay_Sec
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  001FA0                     __ptext0:
   137                           	opt stack 0
   138  001FA0                     _main:
   139                           	opt stack 30
   140                           
   141                           ;SGprojADCIntro2.c: 101: OSCCON = 0x6C;
   142                           
   143                           ;incstack = 0
   144  001FA0  0E6C               	movlw	108
   145  001FA2  6ED3               	movwf	4051,c	;volatile
   146                           
   147                           ;SGprojADCIntro2.c: 107: TRISBbits.TRISB1 = 0;
   148  001FA4  9293               	bcf	3987,1,c	;volatile
   149                           
   150                           ;SGprojADCIntro2.c: 108: PORTBbits.RB1 = 0;
   151  001FA6  9281               	bcf	3969,1,c	;volatile
   152                           
   153                           ;SGprojADCIntro2.c: 112: ADCON1bits.PCFG1 = 0;
   154  001FA8  92C1               	bcf	4033,1,c	;volatile
   155                           
   156                           ;SGprojADCIntro2.c: 113: TRISAbits.RA1 = 1;
   157  001FAA  8292               	bsf	3986,1,c	;volatile
   158                           
   159                           ;SGprojADCIntro2.c: 117: ADCON2bits.ADFM = 0;
   160  001FAC  9EC0               	bcf	4032,7,c	;volatile
   161                           
   162                           ;SGprojADCIntro2.c: 118: ADCON1bits.VCFG0 = 0;
   163  001FAE  98C1               	bcf	4033,4,c	;volatile
   164                           
   165                           ;SGprojADCIntro2.c: 120: ADCON0bits.CHS1 = 0;
   166  001FB0  96C2               	bcf	4034,3,c	;volatile
   167                           
   168                           ;SGprojADCIntro2.c: 121: ADCON0bits.CHS0 = 1;
   169  001FB2  84C2               	bsf	4034,2,c	;volatile
   170                           
   171                           ;SGprojADCIntro2.c: 123: ADCON2bits.ACQT2 = 0;
   172  001FB4  9AC0               	bcf	4032,5,c	;volatile
   173                           
   174                           ;SGprojADCIntro2.c: 124: ADCON2bits.ACQT1 = 0;
   175  001FB6  98C0               	bcf	4032,4,c	;volatile
   176                           
   177                           ;SGprojADCIntro2.c: 125: ADCON2bits.ACQT0 = 0;
   178  001FB8  96C0               	bcf	4032,3,c	;volatile
   179                           
   180                           ;SGprojADCIntro2.c: 127: ADCON2bits.ADCS2 = 1;
   181  001FBA  84C0               	bsf	4032,2,c	;volatile
   182                           
   183                           ;SGprojADCIntro2.c: 128: ADCON2bits.ADCS1 = 0;
   184  001FBC  92C0               	bcf	4032,1,c	;volatile
   185                           
   186                           ;SGprojADCIntro2.c: 129: ADCON2bits.ADCS0 = 0;
   187  001FBE  90C0               	bcf	4032,0,c	;volatile
   188                           
   189                           ;SGprojADCIntro2.c: 131: ADCON0bits.ADON = 1;
   190  001FC0  80C2               	bsf	4034,0,c	;volatile
   191                           
   192                           ;SGprojADCIntro2.c: 136: T0CONbits.T0CS = 0;
   193  001FC2  9AD5               	bcf	4053,5,c	;volatile
   194                           
   195                           ;SGprojADCIntro2.c: 138: T0CONbits.PSA = 0;
   196  001FC4  96D5               	bcf	4053,3,c	;volatile
   197                           
   198                           ;SGprojADCIntro2.c: 142: T0CONbits.T0PS2 = 0;
   199  001FC6  94D5               	bcf	4053,2,c	;volatile
   200                           
   201                           ;SGprojADCIntro2.c: 143: T0CONbits.T0PS1 = 1;
   202  001FC8  82D5               	bsf	4053,1,c	;volatile
   203                           
   204                           ;SGprojADCIntro2.c: 144: T0CONbits.T0PS0 = 0;
   205  001FCA  90D5               	bcf	4053,0,c	;volatile
   206                           
   207                           ;SGprojADCIntro2.c: 148: Delay_Sec(2);
   208  001FCC  0E00               	movlw	0
   209  001FCE  6E02               	movwf	Delay_Sec@i2+1,c
   210  001FD0  0E02               	movlw	2
   211  001FD2  6E01               	movwf	Delay_Sec@i2,c
   212  001FD4  ECAF  F00F         	call	_Delay_Sec	;wreg free
   213                           
   214                           ;SGprojADCIntro2.c: 150: sgvar = 0;
   215  001FD8  0E00               	movlw	0
   216  001FDA  6E07               	movwf	_sgvar+1,c
   217  001FDC  0E00               	movlw	0
   218  001FDE  6E06               	movwf	_sgvar,c
   219  001FE0                     l40:
   220                           
   221                           ;SGprojADCIntro2.c: 155: {
   222                           ;SGprojADCIntro2.c: 156: Delay_Sec(20);
   223  001FE0  0E00               	movlw	0
   224  001FE2  6E02               	movwf	Delay_Sec@i2+1,c
   225  001FE4  0E14               	movlw	20
   226  001FE6  6E01               	movwf	Delay_Sec@i2,c
   227  001FE8  ECAF  F00F         	call	_Delay_Sec	;wreg free
   228                           
   229                           ;SGprojADCIntro2.c: 157: ADCON0bits.GO = 1;
   230  001FEC  82C2               	bsf	4034,1,c	;volatile
   231                           
   232                           ;SGprojADCIntro2.c: 161: if(ADRESH >= 0x80 )
   233  001FEE  0E7F               	movlw	127
   234  001FF0  64C4               	cpfsgt	4036,c	;volatile
   235  001FF2  D001               	goto	l775
   236                           
   237                           ;SGprojADCIntro2.c: 162: PORTBbits.RB1 = 1;
   238  001FF4  8281               	bsf	3969,1,c	;volatile
   239  001FF6                     l775:
   240                           
   241                           ;SGprojADCIntro2.c: 163: if(ADRESH <= 0x80 )
   242  001FF6  0E81               	movlw	129
   243  001FF8  60C4               	cpfslt	4036,c	;volatile
   244  001FFA  D7F2               	goto	l40
   245                           
   246                           ;SGprojADCIntro2.c: 164: PORTBbits.RB1 = 0;
   247  001FFC  9281               	bcf	3969,1,c	;volatile
   248  001FFE  D7F0               	goto	l40
   249  002000                     __end_of_main:
   250                           	opt stack 0
   251                           
   252 ;; *************** function _Delay_Sec *****************
   253 ;; Defined at:
   254 ;;		line 71 in file "SGprojADCIntro2.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;  i2              2    0[COMRAM] int 
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  iseconds        2    3[COMRAM] int 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0
   268 ;;      Params:         2       0
   269 ;;      Locals:         2       0
   270 ;;      Temps:          1       0
   271 ;;      Totals:         5       0
   272 ;;Total ram usage:        5 bytes
   273 ;; Hardware stack levels used:    1
   274 ;; This function calls:
   275 ;;		Nothing
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text1
   282  001F5E                     __ptext1:
   283                           	opt stack 0
   284  001F5E                     _Delay_Sec:
   285                           	opt stack 30
   286                           
   287                           ;SGprojADCIntro2.c: 73: int iseconds;
   288                           ;SGprojADCIntro2.c: 74: sgvar = sgvar + 1;
   289                           
   290                           ;incstack = 0
   291  001F5E  0E01               	movlw	1
   292  001F60  2406               	addwf	_sgvar,w,c
   293  001F62  6E06               	movwf	_sgvar,c
   294  001F64  0E00               	movlw	0
   295  001F66  2007               	addwfc	_sgvar+1,w,c
   296  001F68  6E07               	movwf	_sgvar+1,c
   297                           
   298                           ;SGprojADCIntro2.c: 75: for (iseconds = 0; iseconds < i2; iseconds++)
   299  001F6A  0E00               	movlw	0
   300  001F6C  6E05               	movwf	Delay_Sec@iseconds+1,c
   301  001F6E  0E00               	movlw	0
   302  001F70  6E04               	movwf	Delay_Sec@iseconds,c
   303  001F72  D00B               	goto	l721
   304  001F74                     l32:
   305                           
   306                           ;SGprojADCIntro2.c: 76: {
   307                           ;SGprojADCIntro2.c: 78: INTCONbits.TMR0IF = 0;
   308  001F74  94F2               	bcf	intcon,2,c	;volatile
   309                           
   310                           ;SGprojADCIntro2.c: 80: TMR0H = 0x85;
   311  001F76  0E85               	movlw	133
   312  001F78  6ED7               	movwf	4055,c	;volatile
   313                           
   314                           ;SGprojADCIntro2.c: 81: TMR0L = 0xED;
   315  001F7A  0EED               	movlw	237
   316  001F7C  6ED6               	movwf	4054,c	;volatile
   317                           
   318                           ;SGprojADCIntro2.c: 83: T0CONbits.TMR0ON = 1;
   319  001F7E  8ED5               	bsf	4053,7,c	;volatile
   320  001F80                     l33:
   321  001F80  A4F2               	btfss	intcon,2,c	;volatile
   322  001F82  D7FE               	goto	l33
   323                           
   324                           ;SGprojADCIntro2.c: 87: }
   325                           ;SGprojADCIntro2.c: 89: T0CONbits.TMR0ON = 0;
   326  001F84  9ED5               	bcf	4053,7,c	;volatile
   327  001F86  4A04               	infsnz	Delay_Sec@iseconds,f,c
   328  001F88  2A05               	incf	Delay_Sec@iseconds+1,f,c
   329  001F8A                     l721:
   330  001F8A  5001               	movf	Delay_Sec@i2,w,c
   331  001F8C  5C04               	subwf	Delay_Sec@iseconds,w,c
   332  001F8E  5005               	movf	Delay_Sec@iseconds+1,w,c
   333  001F90  0A80               	xorlw	128
   334  001F92  6E03               	movwf	??_Delay_Sec& (0+255),c
   335  001F94  5002               	movf	Delay_Sec@i2+1,w,c
   336  001F96  0A80               	xorlw	128
   337  001F98  5803               	subwfb	??_Delay_Sec& (0+255),w,c
   338  001F9A  B0D8               	btfsc	status,0,c
   339  001F9C  0012               	return	
   340  001F9E  D7EA               	goto	l32
   341  001FA0                     __end_of_Delay_Sec:
   342                           	opt stack 0
   343  0000                     intcon	equ	0xFF2
   344                           status	equ	0xFD8
   345                           intcon	equ	0xFF2
   346                           status	equ	0xFD8
   347                           
   348                           	psect	rparam
   349  0000                     intcon	equ	0xFF2
   350                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5       7
    BANK0           128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Delay_Sec

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     132
                          _Delay_Sec
 ---------------------------------------------------------------------------------
 (1) _Delay_Sec                                            5     3      2     132
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_Sec

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      5       7       1        5.5%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
ABS                  0      0       7       5        0.0%
BIGRAM              FF      0       0       6        0.0%
DATA                 0      0       7       7        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 09 18:11:03 2017

                     l32 1F74                       l40 1FE0                       l33 1F80  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
                    l721 1F8A                      l775 1FF6             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_WDT$OFF 000000            __CFG_BOR$BOHW 000000  
                   _main 1FA0                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  _TMR0H 000FD7                    _TMR0L 000FD6            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _sgvar 0006                    status 000FD8          __initialization 1F58  
         __CFG_HPOL$HIGH 000000             __end_of_main 2000       __size_of_Delay_Sec 0042  
         __CFG_LPOL$HIGH 000000                   ??_main 0006            __activetblptr 000000  
                 _ADRESH 000FC4                   _OSCCON 000FD3                   _TMR0IF 007F92  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000        __end_of_Delay_Sec 1FA0  
             __accesstop 0080  __end_of__initialization 1F58          __CFG_FLTAMX$RA5 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001          __CFG_OSC$INTIO1 000000  
             __pnvCOMRAM 0006         __CFG_BBSIZ$BB256 000000          __CFG_PWMPIN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 1F58  
                __ramtop 0100                  __ptext0 1FA0                  __ptext1 1F5E  
              _T0CONbits 000FD5        Delay_Sec@iseconds 0004     end_of_initialization 1F58  
              _PORTBbits 000F81                _TRISAbits 000F92                _TRISBbits 000F93  
       __CFG_T1OSCMX$LOW 000000                _Delay_Sec 1F5E      start_initialization 1F58  
             ?_Delay_Sec 0001              ??_Delay_Sec 0003         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
            Delay_Sec@i2 0001                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0060               _INTCONbits 000FF2  
