

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 28 15:30:06 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F1330
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F1330 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _PORTBbits	set	3969
    48  0000                     _TXREG	set	4013
    49  0000                     _RCSTAbits	set	4011
    50  0000                     _TXSTAbits	set	4012
    51  0000                     _BAUDCONbits	set	4024
    52  0000                     _SPBRG	set	4015
    53  0000                     _TRISBbits	set	3987
    54  0000                     _OSCCON	set	4051
    55  0000                     _T0CONbits	set	4053
    56  0000                     _TMR0L	set	4054
    57  0000                     _TMR0H	set	4055
    58  0000                     _INTCONbits	set	4082
    59  0000                     _TRMT	set	32097
    60  0000                     _TMR0IF	set	32658
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  001F5C                     __pcinit:
    66                           	opt stack 0
    67  001F5C                     start_initialization:
    68                           	opt stack 0
    69  001F5C                     __initialization:
    70                           	opt stack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (1 bytes)
    73  001F5C  6A06               	clrf	__pbssCOMRAM& (0+255),c
    74  001F5E                     end_of_initialization:
    75                           	opt stack 0
    76  001F5E                     __end_of__initialization:
    77                           	opt stack 0
    78  001F5E  0100               	movlb	0
    79  001F60  EFCD  F00F         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	bssCOMRAM
    82  000006                     __pbssCOMRAM:
    83                           	opt stack 0
    84  000006                     _ForXmit:
    85                           	opt stack 0
    86  000006                     	ds	1
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt stack 0
    91  000001                     Delay_Sec@i2:
    92                           	opt stack 0
    93                           
    94                           ; 2 bytes @ 0x0
    95  000001                     	ds	2
    96  000003                     ??_Delay_Sec:
    97                           
    98                           ; 1 bytes @ 0x2
    99  000003                     	ds	1
   100  000004                     Delay_Sec@iseconds:
   101                           	opt stack 0
   102                           
   103                           ; 2 bytes @ 0x3
   104  000004                     	ds	2
   105  000006                     
   106                           ; 1 bytes @ 0x5
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 98 in file "../Transmit1ByteSwitch.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;		None
   117 ;; Return value:  Size  Location     Type
   118 ;;                  2   41[None  ] int 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0, cstack
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0
   126 ;;      Params:         0       0
   127 ;;      Locals:         0       0
   128 ;;      Temps:          0       0
   129 ;;      Totals:         0       0
   130 ;;Total ram usage:        0 bytes
   131 ;; Hardware stack levels required when called:    1
   132 ;; This function calls:
   133 ;;		_Delay_Sec
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140  001F9A                     __ptext0:
   141                           	opt stack 0
   142  001F9A                     _main:
   143                           	opt stack 30
   144                           
   145                           ;Transmit1ByteSwitch.c: 100: OSCCON = 0x6C;
   146                           
   147                           ;incstack = 0
   148  001F9A  0E6C               	movlw	108
   149  001F9C  6ED3               	movwf	4051,c	;volatile
   150                           
   151                           ;Transmit1ByteSwitch.c: 102: TRISBbits.TRISB0 = 1;
   152  001F9E  8093               	bsf	3987,0,c	;volatile
   153                           
   154                           ;Transmit1ByteSwitch.c: 103: TRISBbits.TRISB1 = 1;
   155  001FA0  8293               	bsf	3987,1,c	;volatile
   156                           
   157                           ;Transmit1ByteSwitch.c: 109: SPBRG = 25;
   158  001FA2  0E19               	movlw	25
   159  001FA4  6EAF               	movwf	4015,c	;volatile
   160                           
   161                           ;Transmit1ByteSwitch.c: 110: BAUDCONbits.BRG16 = 0;
   162  001FA6  96B8               	bcf	4024,3,c	;volatile
   163                           
   164                           ;Transmit1ByteSwitch.c: 111: TXSTAbits.BRGH = 1;
   165  001FA8  84AC               	bsf	4012,2,c	;volatile
   166                           
   167                           ;Transmit1ByteSwitch.c: 115: TXSTAbits.SYNC = 0;
   168  001FAA  98AC               	bcf	4012,4,c	;volatile
   169                           
   170                           ;Transmit1ByteSwitch.c: 116: TXSTAbits.TX9 = 0;
   171  001FAC  9CAC               	bcf	4012,6,c	;volatile
   172                           
   173                           ;Transmit1ByteSwitch.c: 117: BAUDCONbits.TXCKP = 0;
   174  001FAE  98B8               	bcf	4024,4,c	;volatile
   175                           
   176                           ;Transmit1ByteSwitch.c: 121: RCSTAbits.SPEN = 1;
   177  001FB0  8EAB               	bsf	4011,7,c	;volatile
   178                           
   179                           ;Transmit1ByteSwitch.c: 122: TXSTAbits.TXEN = 1;
   180  001FB2  8AAC               	bsf	4012,5,c	;volatile
   181                           
   182                           ;Transmit1ByteSwitch.c: 128: T0CONbits.T08BIT = 0;
   183  001FB4  9CD5               	bcf	4053,6,c	;volatile
   184                           
   185                           ;Transmit1ByteSwitch.c: 129: T0CONbits.T0CS = 0;
   186  001FB6  9AD5               	bcf	4053,5,c	;volatile
   187                           
   188                           ;Transmit1ByteSwitch.c: 130: T0CONbits.PSA = 0;
   189  001FB8  96D5               	bcf	4053,3,c	;volatile
   190                           
   191                           ;Transmit1ByteSwitch.c: 134: T0CONbits.T0PS2 = 0;
   192  001FBA  94D5               	bcf	4053,2,c	;volatile
   193                           
   194                           ;Transmit1ByteSwitch.c: 135: T0CONbits.T0PS1 = 1;
   195  001FBC  82D5               	bsf	4053,1,c	;volatile
   196                           
   197                           ;Transmit1ByteSwitch.c: 136: T0CONbits.T0PS0 = 0;
   198  001FBE  90D5               	bcf	4053,0,c	;volatile
   199                           
   200                           ;Transmit1ByteSwitch.c: 143: while(0)
   201  001FC0  D00C               	goto	l765
   202  001FC2                     l44:
   203  001FC2  A2AC               	btfss	4012,1,c	;volatile
   204  001FC4  D7FE               	goto	l44
   205                           
   206                           ;Transmit1ByteSwitch.c: 149: TXREG = 0x45;
   207  001FC6  0E45               	movlw	69
   208  001FC8  6EAD               	movwf	4013,c	;volatile
   209  001FCA                     l47:
   210  001FCA  A2AC               	btfss	4012,1,c	;volatile
   211  001FCC  D7FE               	goto	l47
   212                           
   213                           ;Transmit1ByteSwitch.c: 152: Delay_Sec(1);
   214  001FCE  0E00               	movlw	0
   215  001FD0  6E02               	movwf	Delay_Sec@i2+1,c
   216  001FD2  0E01               	movlw	1
   217  001FD4  6E01               	movwf	Delay_Sec@i2,c
   218  001FD6  ECB2  F00F         	call	_Delay_Sec	;wreg free
   219  001FDA                     l765:
   220                           
   221                           ;Transmit1ByteSwitch.c: 161: {
   222                           ;Transmit1ByteSwitch.c: 163: if(PORTBbits.RB1 ==0)
   223  001FDA  B281               	btfsc	3969,1,c	;volatile
   224  001FDC  D002               	goto	l769
   225                           
   226                           ;Transmit1ByteSwitch.c: 164: {ForXmit = 0x0F;}
   227  001FDE  0E0F               	movlw	15
   228  001FE0  6E06               	movwf	_ForXmit,c
   229  001FE2                     l769:
   230                           
   231                           ;Transmit1ByteSwitch.c: 165: if(PORTBbits.RB1 == 1)
   232  001FE2  A281               	btfss	3969,1,c	;volatile
   233  001FE4  D002               	goto	l773
   234                           
   235                           ;Transmit1ByteSwitch.c: 166: {ForXmit = 0x87;}
   236  001FE6  0E87               	movlw	135
   237  001FE8  6E06               	movwf	_ForXmit,c
   238  001FEA                     l773:
   239                           
   240                           ;Transmit1ByteSwitch.c: 168: if(PORTBbits.RB0 == 1 )
   241  001FEA  A081               	btfss	3969,0,c	;volatile
   242  001FEC  D7F6               	goto	l765
   243                           
   244                           ;Transmit1ByteSwitch.c: 169: {
   245                           ;Transmit1ByteSwitch.c: 170: TXREG = ForXmit;
   246  001FEE  C006  FFAD         	movff	_ForXmit,4013	;volatile
   247                           
   248                           ;Transmit1ByteSwitch.c: 171: Delay_Sec(1);
   249  001FF2  0E00               	movlw	0
   250  001FF4  6E02               	movwf	Delay_Sec@i2+1,c
   251  001FF6  0E01               	movlw	1
   252  001FF8  6E01               	movwf	Delay_Sec@i2,c
   253  001FFA  ECB2  F00F         	call	_Delay_Sec	;wreg free
   254  001FFE  D7ED               	goto	l765
   255  002000                     __end_of_main:
   256                           	opt stack 0
   257                           
   258 ;; *************** function _Delay_Sec *****************
   259 ;; Defined at:
   260 ;;		line 65 in file "../Transmit1ByteSwitch.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;  i2              2    0[COMRAM] int 
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  iseconds        2    3[COMRAM] int 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, status,2, status,0
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0
   274 ;;      Params:         2       0
   275 ;;      Locals:         2       0
   276 ;;      Temps:          1       0
   277 ;;      Totals:         5       0
   278 ;;Total ram usage:        5 bytes
   279 ;; Hardware stack levels used:    1
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text1
   288  001F64                     __ptext1:
   289                           	opt stack 0
   290  001F64                     _Delay_Sec:
   291                           	opt stack 30
   292                           
   293                           ;Transmit1ByteSwitch.c: 67: int iseconds;
   294                           ;Transmit1ByteSwitch.c: 69: for (iseconds = 0; iseconds < i2; iseconds++)
   295                           
   296                           ;incstack = 0
   297  001F64  0E00               	movlw	0
   298  001F66  6E05               	movwf	Delay_Sec@iseconds+1,c
   299  001F68  0E00               	movlw	0
   300  001F6A  6E04               	movwf	Delay_Sec@iseconds,c
   301  001F6C  D00B               	goto	l725
   302  001F6E                     l34:
   303                           
   304                           ;Transmit1ByteSwitch.c: 70: {
   305                           ;Transmit1ByteSwitch.c: 72: INTCONbits.TMR0IF = 0;
   306  001F6E  94F2               	bcf	intcon,2,c	;volatile
   307                           
   308                           ;Transmit1ByteSwitch.c: 81: TMR0H = 0x85;
   309  001F70  0E85               	movlw	133
   310  001F72  6ED7               	movwf	4055,c	;volatile
   311                           
   312                           ;Transmit1ByteSwitch.c: 82: TMR0L = 0xED;
   313  001F74  0EED               	movlw	237
   314  001F76  6ED6               	movwf	4054,c	;volatile
   315                           
   316                           ;Transmit1ByteSwitch.c: 84: T0CONbits.TMR0ON = 1;
   317  001F78  8ED5               	bsf	4053,7,c	;volatile
   318  001F7A                     l35:
   319  001F7A  A4F2               	btfss	intcon,2,c	;volatile
   320  001F7C  D7FE               	goto	l35
   321                           
   322                           ;Transmit1ByteSwitch.c: 89: }
   323                           ;Transmit1ByteSwitch.c: 91: T0CONbits.TMR0ON = 0;
   324  001F7E  9ED5               	bcf	4053,7,c	;volatile
   325  001F80  4A04               	infsnz	Delay_Sec@iseconds,f,c
   326  001F82  2A05               	incf	Delay_Sec@iseconds+1,f,c
   327  001F84                     l725:
   328  001F84  5001               	movf	Delay_Sec@i2,w,c
   329  001F86  5C04               	subwf	Delay_Sec@iseconds,w,c
   330  001F88  5005               	movf	Delay_Sec@iseconds+1,w,c
   331  001F8A  0A80               	xorlw	128
   332  001F8C  6E03               	movwf	??_Delay_Sec& (0+255),c
   333  001F8E  5002               	movf	Delay_Sec@i2+1,w,c
   334  001F90  0A80               	xorlw	128
   335  001F92  5803               	subwfb	??_Delay_Sec& (0+255),w,c
   336  001F94  B0D8               	btfsc	status,0,c
   337  001F96  0012               	return	
   338  001F98  D7EA               	goto	l34
   339  001F9A                     __end_of_Delay_Sec:
   340                           	opt stack 0
   341  0000                     intcon	equ	0xFF2
   342                           status	equ	0xFD8
   343                           intcon	equ	0xFF2
   344                           status	equ	0xFD8
   345                           
   346                           	psect	rparam
   347  0000                     intcon	equ	0xFF2
   348                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5       6
    BANK0           128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Delay_Sec

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     132
                          _Delay_Sec
 ---------------------------------------------------------------------------------
 (1) _Delay_Sec                                            5     3      2     132
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_Sec

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              FF      0       0       6        0.0%
EEDATA              80      0       0       0        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      5       6       1        4.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       5        0.0%
DATA                 0      0       6       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 28 15:30:06 2017

                     l34 1F6E                       l35 1F7A                       l44 1FC2  
                     l47 1FCA              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l725 1F84                      l773 1FEA  
                    l765 1FDA                      l769 1FE2             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_WDT$OFF 000000                     _TRMT 007D61  
          __CFG_BOR$BOHW 000000                     _main 1F9A                     start 0000  
          __CFG_IESO$OFF 000000             ___param_bank 000000                    ?_main 0001  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _SPBRG 000FAF  
                  _TXREG 000FAD            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_MCLRE$OFF 000000          __initialization 1F5C           __CFG_HPOL$HIGH 000000  
           __end_of_main 2000       __size_of_Delay_Sec 0036           __CFG_LPOL$HIGH 000000  
                 ??_main 0006            __activetblptr 000000                   _OSCCON 000FD3  
                 _TMR0IF 007F92           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
      __end_of_Delay_Sec 1F9A               __accesstop 0080  __end_of__initialization 1F5E  
        __CFG_FLTAMX$RA5 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
        __CFG_OSC$INTIO1 000000         __CFG_BBSIZ$BB256 000000          __CFG_PWMPIN$OFF 000000  
                _ForXmit 0006                  __Hparam 0000                  __Lparam 0000  
                __pcinit 1F5C                  __ramtop 0100                  __ptext0 1F9A  
                __ptext1 1F64                _T0CONbits 000FD5        Delay_Sec@iseconds 0004  
   end_of_initialization 1F5E                _RCSTAbits 000FAB                _PORTBbits 000F81  
              _TRISBbits 000F93                _TXSTAbits 000FAC         __CFG_T1OSCMX$LOW 000000  
              _Delay_Sec 1F64              _BAUDCONbits 000FB8      start_initialization 1F5C  
             ?_Delay_Sec 0001              __pbssCOMRAM 0006              ??_Delay_Sec 0003  
       __CFG_WDTPS$32768 000000              Delay_Sec@i2 0001                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0066               _INTCONbits 000FF2  
