

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Mar 27 14:56:36 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F690 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011E                     	;# 
   118  011F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  019D                     	;# 
   122  019E                     	;# 
   123  0001                     _TMR0	set	1
   124  000B                     _INTCONbits	set	11
   125  0007                     _PORTCbits	set	7
   126  001E                     _ADRESH	set	30
   127  001F                     _ADCON0bits	set	31
   128  0006                     _PORTB	set	6
   129  009F                     _ADCON1bits	set	159
   130  0081                     _OPTION_REGbits	set	129
   131  0087                     _TRISCbits	set	135
   132  0086                     _TRISBbits	set	134
   133  011E                     _ANSELbits	set	286
   134  011F                     _ANSELHbits	set	287
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  07FA                     start_initialization:	
   140  07FA                     __initialization:	
   141                           
   142                           ; Clear objects allocated to BITCOMMON
   143  07FA  01F4               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   144                           
   145                           ; Clear objects allocated to COMMON
   146  07FB  01F0               	clrf	__pbssCOMMON& (0+127)
   147  07FC  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   148  07FD                     end_of_initialization:	
   149                           ;End of C runtime variable initialization code
   150                           
   151  07FD                     __end_of__initialization:	
   152  07FD  0183               	clrf	3
   153  07FE  118A  2FB4         	ljmp	_main	;jump to C main() function
   154                           
   155                           	psect	bitbssCOMMON
   156  03A0                     __pbitbssCOMMON:	
   157  03A0                     _toggle:	
   158  03A0                     	ds	1
   159                           
   160                           	psect	bssCOMMON
   161  0070                     __pbssCOMMON:	
   162  0070                     _TMR0_preload:	
   163  0070                     	ds	1
   164  0071                     _LED_Output:	
   165  0071                     	ds	1
   166                           
   167                           	psect	cstackCOMMON
   168  0072                     __pcstackCOMMON:	
   169  0072                     ?_Initialize:	
   170  0072                     ??_Initialize:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0072                     ?_Get_Inputs:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  0072                     ??_Get_Inputs:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  0072                     ?_Decide:	
   180                           ; 1 bytes @ 0x0
   181                           
   182  0072                     ??_Decide:	
   183                           ; 1 bytes @ 0x0
   184                           
   185  0072                     ?_Do_Outputs:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0072                     ??_Do_Outputs:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0072                     ?_Timing:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0072                     ??_Timing:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0072                     ?_main:	
   198                           ; 1 bytes @ 0x0
   199                           
   200                           
   201                           ; 1 bytes @ 0x0
   202  0072                     	ds	2
   203  0074                     ??_main:	
   204                           
   205                           	psect	maintext
   206  07B4                     __pmaintext:	
   207                           ; 1 bytes @ 0x2
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 92 in file "../ADC_Lab2.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, status,2, status,0, pclath, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : B00/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   227 ;;      Params:         0       0       0       0
   228 ;;      Locals:         0       0       0       0
   229 ;;      Temps:          0       0       0       0
   230 ;;      Totals:         0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels required when called:    1
   233 ;; This function calls:
   234 ;;		_Decide
   235 ;;		_Do_Outputs
   236 ;;		_Get_Inputs
   237 ;;		_Initialize
   238 ;;		_Timing
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           
   245                           ;psect for function _main
   246  07B4                     _main:	
   247                           
   248                           ;ADC_Lab2.c: 95: Initialize();
   249                           
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   252  07B4  118A  27D6  118A   	fcall	_Initialize
   253  07B7                     l575:	
   254                           ;ADC_Lab2.c: 96: while(1)
   255                           
   256                           
   257                           ;ADC_Lab2.c: 97: {
   258                           ;ADC_Lab2.c: 98: Get_Inputs();
   259  07B7  118A  27A0  118A   	fcall	_Get_Inputs
   260                           
   261                           ;ADC_Lab2.c: 99: Decide();
   262  07BA  118A  27C4  118A   	fcall	_Decide
   263                           
   264                           ;ADC_Lab2.c: 100: Do_Outputs();
   265  07BD  118A  2796  118A   	fcall	_Do_Outputs
   266                           
   267                           ;ADC_Lab2.c: 101: Timing();
   268  07C0  118A  27AA  118A   	fcall	_Timing
   269  07C3  2FB7               	goto	l575
   270  07C4                     __end_of_main:	
   271                           
   272                           	psect	text1
   273  07AA                     __ptext1:	
   274 ;; *************** function _Timing *****************
   275 ;; Defined at:
   276 ;;		line 208 in file "../ADC_Lab2.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   290 ;;      Params:         0       0       0       0
   291 ;;      Locals:         0       0       0       0
   292 ;;      Temps:          0       0       0       0
   293 ;;      Totals:         0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_main
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           
   304                           ;psect for function _Timing
   305  07AA                     _Timing:	
   306                           
   307                           ;ADC_Lab2.c: 212: INTCONbits.T0IF = 0;
   308                           
   309                           ;incstack = 0
   310                           ; Regs used in _Timing: [wreg+status,2+status,0]
   311  07AA  110B               	bcf	11,2	;volatile
   312                           
   313                           ;ADC_Lab2.c: 216: TMR0 = 255 - TMR0_preload;
   314  07AB  0370               	decf	_TMR0_preload,w
   315  07AC  3AFF               	xorlw	255
   316  07AD  3EFF               	addlw	255
   317  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   318  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   319  07B0  0081               	movwf	1	;volatile
   320  07B1                     l66:	
   321                           ;ADC_Lab2.c: 219: while(INTCONbits.T0IF == 0);
   322                           
   323  07B1  190B               	btfsc	11,2	;volatile
   324  07B2  0008               	return
   325  07B3  2FB1               	goto	l66
   326  07B4                     __end_of_Timing:	
   327                           
   328                           	psect	text2
   329  07D6                     __ptext2:	
   330 ;; *************** function _Initialize *****************
   331 ;; Defined at:
   332 ;;		line 114 in file "../ADC_Lab2.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   346 ;;      Params:         0       0       0       0
   347 ;;      Locals:         0       0       0       0
   348 ;;      Temps:          0       0       0       0
   349 ;;      Totals:         0       0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels used:    1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _Initialize
   361  07D6                     _Initialize:	
   362                           
   363                           ;ADC_Lab2.c: 117: PORTB = 0;
   364                           
   365                           ;incstack = 0
   366                           ; Regs used in _Initialize: [wreg+status,2+status,0]
   367  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   368  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   369  07D8  0186               	clrf	6	;volatile
   370                           
   371                           ;ADC_Lab2.c: 119: TRISBbits.TRISB4 = 1;
   372  07D9  1683               	bsf	3,5	;RP0=1, select bank1
   373  07DA  1303               	bcf	3,6	;RP1=0, select bank1
   374  07DB  1606               	bsf	6,4	;volatile
   375                           
   376                           ;ADC_Lab2.c: 121: ANSELHbits.ANS10 = 1;
   377  07DC  1283               	bcf	3,5	;RP0=0, select bank2
   378  07DD  1703               	bsf	3,6	;RP1=1, select bank2
   379  07DE  151F               	bsf	31,2	;volatile
   380                           
   381                           ;ADC_Lab2.c: 123: TRISCbits.TRISC0 = 0;
   382  07DF  1683               	bsf	3,5	;RP0=1, select bank1
   383  07E0  1303               	bcf	3,6	;RP1=0, select bank1
   384  07E1  1007               	bcf	7,0	;volatile
   385                           
   386                           ;ADC_Lab2.c: 124: ANSELbits.ANS4 = 0;
   387  07E2  1283               	bcf	3,5	;RP0=0, select bank2
   388  07E3  1703               	bsf	3,6	;RP1=1, select bank2
   389  07E4  121E               	bcf	30,4	;volatile
   390                           
   391                           ;ADC_Lab2.c: 129: OPTION_REGbits.T0CS = 0;
   392  07E5  1683               	bsf	3,5	;RP0=1, select bank1
   393  07E6  1303               	bcf	3,6	;RP1=0, select bank1
   394  07E7  1281               	bcf	1,5	;volatile
   395                           
   396                           ;ADC_Lab2.c: 132: OPTION_REGbits.T0SE = 0;
   397  07E8  1201               	bcf	1,4	;volatile
   398                           
   399                           ;ADC_Lab2.c: 134: OPTION_REGbits.PSA = 1;
   400  07E9  1581               	bsf	1,3	;volatile
   401                           
   402                           ;ADC_Lab2.c: 137: OPTION_REGbits.PS = 0b011;
   403  07EA  0801               	movf	1,w	;volatile
   404  07EB  39F8               	andlw	-8
   405  07EC  3803               	iorlw	3
   406  07ED  0081               	movwf	1	;volatile
   407                           
   408                           ;ADC_Lab2.c: 141: ADCON1bits.ADCS = 0b111;
   409  07EE  3070               	movlw	112
   410  07EF  049F               	iorwf	31,f	;volatile
   411                           
   412                           ;ADC_Lab2.c: 144: ADCON0bits.VCFG = 0;
   413  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   414  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   415  07F2  131F               	bcf	31,6	;volatile
   416                           
   417                           ;ADC_Lab2.c: 146: ADCON0bits.CHS = 10;
   418  07F3  081F               	movf	31,w	;volatile
   419  07F4  39C3               	andlw	-61
   420  07F5  3828               	iorlw	40
   421  07F6  009F               	movwf	31	;volatile
   422                           
   423                           ;ADC_Lab2.c: 148: ADCON0bits.ADFM = 0;
   424  07F7  139F               	bcf	31,7	;volatile
   425                           
   426                           ;ADC_Lab2.c: 150: ADCON0bits.ADON = 1;
   427  07F8  141F               	bsf	31,0	;volatile
   428  07F9  0008               	return
   429  07FA                     __end_of_Initialize:	
   430                           
   431                           	psect	text3
   432  07A0                     __ptext3:	
   433 ;; *************** function _Get_Inputs *****************
   434 ;; Defined at:
   435 ;;		line 159 in file "../ADC_Lab2.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		None
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   449 ;;      Params:         0       0       0       0
   450 ;;      Locals:         0       0       0       0
   451 ;;      Temps:          0       0       0       0
   452 ;;      Totals:         0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _Get_Inputs
   464  07A0                     _Get_Inputs:	
   465                           
   466                           ;ADC_Lab2.c: 162: _delay((unsigned long)((8)*(4000000/4000000.0)));
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _Get_Inputs: []
   470  07A0  2FA1               	nop2	;2 cycle nop
   471  07A1  2FA2               	nop2	;2 cycle nop
   472  07A2  2FA3               	nop2	;2 cycle nop
   473  07A3  2FA4               	nop2	;2 cycle nop
   474                           
   475                           ;ADC_Lab2.c: 164: ADCON0bits.GO_nDONE = 1;
   476  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   477  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   478  07A6  149F               	bsf	31,1	;volatile
   479  07A7                     l54:	
   480                           ;ADC_Lab2.c: 169: while(ADCON0bits.GO_nDONE == 1);
   481                           
   482  07A7  1C9F               	btfss	31,1	;volatile
   483  07A8  0008               	return
   484  07A9  2FA7               	goto	l54
   485  07AA                     __end_of_Get_Inputs:	
   486                           
   487                           	psect	text4
   488  0796                     __ptext4:	
   489 ;; *************** function _Do_Outputs *****************
   490 ;; Defined at:
   491 ;;		line 196 in file "../ADC_Lab2.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		None
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   505 ;;      Params:         0       0       0       0
   506 ;;      Locals:         0       0       0       0
   507 ;;      Temps:          0       0       0       0
   508 ;;      Totals:         0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _Do_Outputs
   520  0796                     _Do_Outputs:	
   521                           
   522                           ;ADC_Lab2.c: 199: PORTCbits.RC0 = toggle;
   523                           
   524                           ;incstack = 0
   525                           ; Regs used in _Do_Outputs: []
   526  0796  1C74               	btfss	_toggle/(0+8),_toggle& (0+7)
   527  0797  2F9C               	goto	u30
   528  0798  1283               	bcf	3,5	;RP0=0, select bank0
   529  0799  1303               	bcf	3,6	;RP1=0, select bank0
   530  079A  1407               	bsf	7,0	;volatile
   531  079B  0008               	return
   532  079C                     u30:	
   533  079C  1283               	bcf	3,5	;RP0=0, select bank0
   534  079D  1303               	bcf	3,6	;RP1=0, select bank0
   535  079E  1007               	bcf	7,0	;volatile
   536  079F  0008               	return
   537  07A0                     __end_of_Do_Outputs:	
   538                           
   539                           	psect	text5
   540  07C4                     __ptext5:	
   541 ;; *************** function _Decide *****************
   542 ;; Defined at:
   543 ;;		line 179 in file "../ADC_Lab2.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   557 ;;      Params:         0       0       0       0
   558 ;;      Locals:         0       0       0       0
   559 ;;      Temps:          2       0       0       0
   560 ;;      Totals:         2       0       0       0
   561 ;;Total ram usage:        2 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _Decide
   572  07C4                     _Decide:	
   573                           
   574                           ;ADC_Lab2.c: 184: TMR0_preload = ADRESH<<3;
   575                           
   576                           ;incstack = 0
   577                           ; Regs used in _Decide: [wreg+status,2+status,0]
   578  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   579  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   580  07C6  081E               	movf	30,w	;volatile
   581  07C7  00F2               	movwf	??_Decide
   582  07C8  3002               	movlw	2
   583  07C9                     u25:	
   584  07C9  1003               	clrc
   585  07CA  0DF2               	rlf	??_Decide,f
   586  07CB  3EFF               	addlw	-1
   587  07CC  1D03               	skipz
   588  07CD  2FC9               	goto	u25
   589  07CE  1003               	clrc
   590  07CF  0D72               	rlf	??_Decide,w
   591  07D0  00F3               	movwf	??_Decide+1
   592  07D1  0873               	movf	??_Decide+1,w
   593  07D2  00F0               	movwf	_TMR0_preload
   594                           
   595                           ;ADC_Lab2.c: 186: toggle ^= 1;
   596  07D3  3001               	movlw	(0+1) shl (_toggle& (0+7))
   597  07D4  06F4               	xorwf	_toggle/(0+8),f
   598  07D5  0008               	return
   599  07D6                     __end_of_Decide:	
   600  007E                     btemp	set	126	;btemp
   601  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Decide

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _Decide
                         _Do_Outputs
                         _Get_Inputs
                         _Initialize
                             _Timing
 ---------------------------------------------------------------------------------
 (1) _Timing                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Inputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Do_Outputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Decide                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decide
   _Do_Outputs
   _Get_Inputs
   _Initialize
   _Timing

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       5       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       5      10        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Mar 27 14:56:36 2017

            __CFG_CP$OFF 0000                       l54 07A7                       l66 07B1  
                     u30 079C                       u25 07C9                      l575 07B7  
           __CFG_CPD$OFF 0000                     _TMR0 0001                     _main 07B4  
                   btemp 007E                     start 0000               _Do_Outputs 0796  
          __CFG_IESO$OFF 0000               _Get_Inputs 07A0                    ?_main 0072  
          __CFG_WDTE$OFF 0000                    _PORTB 0006           __CFG_FCMEN$OFF 0000  
         __pbitbssCOMMON 03A0           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 07FA  
           __end_of_main 07C4               _Initialize 07D6                   ??_main 0074  
                 _ADRESH 001E                   _Decide 07C4              ?_Do_Outputs 0072  
         __CFG_PWRTE$OFF 0000                   _Timing 07AA              ?_Get_Inputs 0072  
                 _toggle 03A0  __end_of__initialization 07FD           __pcstackCOMMON 0072  
            ?_Initialize 0072           _OPTION_REGbits 0081      __size_of_Do_Outputs 000A  
    __size_of_Get_Inputs 000A                  ?_Decide 0072               __pmaintext 07B4  
                ?_Timing 0072      __size_of_Initialize 0024          __size_of_Decide 0012  
        __size_of_Timing 000A                _ANSELbits 011E                  __ptext1 07AA  
                __ptext2 07D6                  __ptext3 07A0                  __ptext4 0796  
                __ptext5 07C4     end_of_initialization 07FD             ??_Do_Outputs 0072  
           ??_Get_Inputs 0072                _PORTCbits 0007                _TRISBbits 0086  
              _TRISCbits 0087       __end_of_Do_Outputs 07A0       __end_of_Get_Inputs 07AA  
         __end_of_Decide 07D6           __end_of_Timing 07B4             ??_Initialize 0072  
    start_initialization 07FA       __end_of_Initialize 07FA                 ??_Decide 0072  
               ??_Timing 0072              __pbssCOMMON 0070                ___latbits 0001  
             _ADCON0bits 001F               _ADCON1bits 009F               _ANSELHbits 011F  
          __size_of_main 0010               _LED_Output 0071               _INTCONbits 000B  
           _TMR0_preload 0070        __CFG_FOSC$INTRCIO 0000  
